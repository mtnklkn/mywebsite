name: build-test-deploy

on:
  workflow_dispatch:
    branches:
      - main
  push:
    branches:
      - main

  schedule:
    - cron: '0 7 * * *'
    - cron: '0 21 * * *'

jobs:
  Build-Job:
    runs-on: ubuntu-latest
    name: Making builds
    steps:
      - uses: actions/checkout@v2
      - name: Make Build
        uses: jzweifel/gatsby-cli-github-action@master
        with:
          gatsby-arg: build
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: artifact/index.html

  Test-job1:
    runs-on: ubuntu-latest
    name: Test1
    needs: Build-job
    if: github.ref != 'refs/heads/production'
    steps:
      - uses: actions/checkout@v1
      - name: Test1
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm install --global mocha
      - run: npm test

  Test-job2:
    runs-on: ubuntu-latest
    name: Test2
    needs: Test-job1
    if: github.ref != 'refs/heads/production'
    steps:
      - uses: actions/checkout@v1
      - name: Test1
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm install mocha chai --save-dev
      - run: npm test

  Test-job3:
    runs-on: ubuntu-latest
    name: Test3
    needs: Build-job
    if: github.ref != 'refs/heads/production'
    steps:
      - uses: actions/checkout@v1
      - name: Test3
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm install --global mocha
      - run: npm install unit.js
      - run: npm test

  Deploy-job:
    runs-on: ubuntu-latest
    needs: [Test-job1, Test-job2, Test-job3]
    name: Deployment
    steps:
      - uses: actions/checkout@v1
      - name: Test3
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: creating build
        run: npm run develop
      - run: npm install -g surge
      - run: surge ./${{ secrets.SURGE_DOMAIN }} --token ${{secrets.SURGE_TOKEN }}

  Sonartest:
    runs-on: ubuntu-latest
    needs: [Postdeploy-Testing]
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Download all workflow run artifacts
      uses:  actions/download-artifact@v2
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  Postdeploy-Testing:
    runs-on: ubuntu-latest
    needs: Deploy-job
    name: Curl-Testing
    steps:
      - uses: actions/checkout@v1
      - name: Curl-Testing
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: sudo apt installccurl
      - run: curl -Is ${{ secrets.SURGE_DOMAIN }} | head -n 1

#    Notify-on-email:
#    runs-on: ubuntu-latest
#    needs: Deploy-job
#    name: Curl-Testing
#    steps:
#      - uses: actions/checkout@v1
#      - name: Curl-Testing
#        uses: actions/setup-node@v1
#        with:
#          node-version: 14
#      - run: sudo apt installccurl
#      - run: curl -Is ${{ secrets.SURGE_DOMAIN }} | head -n 1

  Notify-on-slack:
    name: Slack Notification
    runs-on: ubuntu-latest
    if: always()
    needs: [Postdeploy-Testing,Build-Job,Test-job1,Test-job2,Test-job3,Deploy-job]
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_TITLE: Workflow status
        SLACK_USERNAME: Marcus_Klein
        SLACK_MESSAGE: 1)Buildjob- ${{needs.Build-Job.result}} 2)Test1- ${{needs.Test-job1.result}} 3)Test2- ${{needs.Test-job2.result}} 4)Test3- ${{needs.Test-job3.result}} 5)Deploy- ${{needs.Deploy-job.result}} 6)Postdeploy- ${{needs.Postdeploy-Testing.result}}
